<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=6">
        <title>MarkDown Aggregator</title>
        <link rel="stylesheet" href="/style.css">
        <link rel="stylesheet" href="/markdown.css">
        <link rel="stylesheet" href="https://unpkg.com/@highlightjs/cdn-assets@11.6.0/styles/default.min.css">
        <link rel="stylesheet" href="https://unpkg.com/@highlightjs/cdn-assets@11.6.0/styles/github-dark.min.css">
        <script src="https://unpkg.com/showdown@2.1.0/dist/showdown.min.js"></script>
        <script src="https://unpkg.com/@highlightjs/cdn-assets@11.6.0/highlight.min.js"></script>
        <script>
            let converter = null;
            function appendOwner(url, owner) {
                return url + (url.indexOf('?') < 0?'?':'&') + 'owner=' + owner;
            }
            function open(url, owner) {
                fetch(appendOwner(url, owner))
                    .then((response) => response.text())
                    .then((data) => {
                        const content = converter.makeHtml(data);
                        document.querySelector('#content').innerHTML = content;
                        document.querySelectorAll('#content a').forEach((self) => {
                            const href = self.href;
                            if(href && (href.indexOf('http') !== 0 || href.indexOf(window.location.origin) === 0)) {
                                self.setAttribute('href', appendOwner(href, owner));
                            }
                        });
                        document.querySelectorAll('#content img').forEach((self) => {
                            const href = self.src;
                            if(href && (href.indexOf('http') !== 0 || href.indexOf(window.location.origin) === 0)) {
                                self.setAttribute('src', appendOwner(href, owner));
                            }
                        });
                        document.querySelectorAll('#content pre code').forEach((el) => {
                            hljs.highlightElement(el);
                        });
                        document.querySelector('body').classList.toggle('collapsed');
                    });
            }
            window.addEventListener('load', function() {
                let pathname = decodeURI(window.location.pathname);
                converter = new showdown.Converter();
                document.querySelectorAll('#menu h1').forEach((element) => element.addEventListener('click', function() {
                    document.querySelector('body').classList.toggle('collapsed');
                }));
                document.querySelectorAll('#menu li a').forEach((element) => element.addEventListener('click', function(event) {
                    const self = event.target;
                    event.preventDefault();
                    if(self.parentNode.classList.contains('dir')) {
                        self.parentNode.classList.toggle('open');
                    }
                    else {
                        document.querySelectorAll('li.active').forEach((self) => self.classList.toggle('active'));
                        self.parentNode.classList.toggle('active');
                        const url = self.href;
                        open(url, self.parentNode.dataset.owner)
                        window.history.pushState({}, '', url);
                    }
                }));
                document.querySelectorAll('#menu li.dir').forEach((self) => {
                    let next = self.nextElementSibling;
                    if(next) {
                        const url = self.querySelector('a').href;
                        if(pathname.indexOf(url) === 0) {
                            self.classList.add('open');
                        }
                        const newParent = document.createElement('ul')
                        self.appendChild(newParent);
                        while(next && next.querySelector('a').href && next.querySelector('a').href.indexOf(url) === 0) {
                            newParent.appendChild(self.nextElementSibling);
                            next = self.nextElementSibling;
                        }
                        if(newParent.querySelectorAll('a').length == 0) {
                            self.classList.add('hidden');
                        }
                    }
                    else {
                        self.classList.add('hidden');
                    }
                });
                document.querySelectorAll('#menu li a[href=\'' + pathname + '\']').forEach((self) => {
                    self.parentNode.classList.toggle('active');
                    open(pathname, self.parentNode.dataset.owner);
                });
            });
        </script>
    </head>
    <body>
        <div id="menu">
            <h1>MarkDown Aggregator</h1>
            <ul>
            {{#tree}}
                <li data-owner="{{entry.config_entry}}"{{#is_dir}} class="dir"{{/is_dir}}><a href="/{{path}}">{{display}}</a></li>
            {{/tree}}
            </ul>
        </div>
        <div id="content">
            <h1>Welcome!</h1>

            <p>Built with <a href="https://github.com/nappa85/md-aggregator">MD-Aggregator</a></p>
        </div>
    </body>
</html>
